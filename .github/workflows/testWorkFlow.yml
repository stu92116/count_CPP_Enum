name: (test) Build and Publish Release

on:
  workflow_dispatch: # Add manual trigger
#   push:
#     tags:
#       - "v*.*.*"


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      # ...
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install && npm i -g @vscode/vsce

      - name: Build extension
        run: npm run build
  
      - name: Package extension
        run: vsce package -o CPP_Enum_Counter.vsix
        
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.SCERET_TOKEN }}
          files: CPP_Enum_Counter.vsix
          prerelease: false
  
#       - name: Create release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.SCERET_TOKEN }}
#         with:
#           tag_name: ${{ github.ref }}
#           release_name: Release ${{ github.ref }}
#           body: |
#             Release ${{ github.ref }}
#           draft: false
#           prerelease: false

#       - name: Upload .vsix file as asset
#         id: upload_asset
#         uses: actions/upload-release-asset@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }}
#           asset_path: ./CPP_Enum_Counter.vsix
#           asset_name: CPP_Enum_Counter.vsix
#           asset_content_type: application/octet-stream
          
      - name: Check if version changed
        id: check_version_changed
        run: |
          versionChanged=$(git diff HEAD~1 HEAD -- package.json | grep "version")
          if [[ -z ${versionChanged} ]]; then
            echo "version_changed=false" >> $GITHUB_ENV
          else
            echo "version_changed=true" >> $GITHUB_ENV
          fi

      - name: Publish Extension
        if: env.version_changed == 'true'
        env:
          VSCE_TOKEN: ${{ secrets.SCERET_AZURE_TOKEN }}
        run: |
          echo "Runing Deploy"
          npx vsce publish --packagePath ./CPP_Enum_Counter.vsix --pat $VSCE_TOKEN
